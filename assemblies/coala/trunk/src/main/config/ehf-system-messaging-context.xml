<?xml version="1.0" encoding="UTF-8"?>

<!--                                         -->
<!-- ICW eHF Standard Configuration          -->
<!-- Created by the ICW eHF Project Template -->
<!--                                         -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- ================================================================ -->
	<!-- This bean definition is not used by itself, the declaration is   -->
	<!-- performed only for its side-effect: wiring the event emitters    -->
	<!-- from the different modules with the eventMesssageSender.         -->
	<!-- ================================================================ -->
	<bean id="configureMessageProducersWithMessageSender" init-method="configureProducer"
		class="com.icw.ehf.messaging.conf.MessageProducerConfigurer">
		<property name="producer">
			<list>
				<!-- ehf-usermanagement: ehf-usermgnt-runtime-context.xml -->
				<ref bean="authenticationEventEmitter" />
				<ref bean="usermgntEventEmitter" />

				<!-- ehf-authorization: authorization-context.xml -->
				<ref bean="accessManagerTarget" />

				<!-- ehf-assembly: ehf-authentication-context.xml -->
				<ref bean="logoutEventEmitter" />
				
				<!-- ehf-commons-security: ehf-commons-security-context.xml -->
				<ref bean="auditValidationListener" />
				
				<!-- ehf-record-medical:  -->
				<ref bean="observationViewEventEmitter" />
			</list>
		</property>
		<property name="sender" ref="eventMessageSender" />
	</bean>

	<!-- ================================================================ -->
	<!-- This sender puts messages into the auditSourceMessageQueue       -->
	<!-- ================================================================ -->
	<!-- <bean id="eventMessageSender" class="com.icw.ehf.messaging.mem.MessageSenderImpl">
		<property name="messageQueue" ref="auditSourceMessageQueue2" />
	</bean> -->
	<alias alias="eventMessageSender" name="endpointMessageSender"/>

	<!-- ================================================================ -->
	<!-- The auditSourceMessageQueue expects messages that contain        -->
	<!-- objects of type Event. This queue is used for events that are    -->
	<!-- emitted by the various modules.                                  -->
	<!-- ================================================================ -->
	<bean id="auditSourceMessageQueue2" class="com.icw.ehf.messaging.mem.MessageQueueImpl" />

	<!-- ================================================================ -->
	<!--  Container that fetches messages from the auditSourceMessageQueue-->
	<!--  and notifies the listener that performs the transformation to   -->
	<!--  audit entries and sends them to the audit log queue             -->
	<!-- ================================================================ -->
	<bean id="transformationMessageListenerContainer"
		class="com.icw.ehf.messaging.mem.MessageListenerContainer" init-method="init"
		destroy-method="destroy">
		<!-- TODO: evaluate the appropriate number of threads -->
		<property name="workerCount" value="9" />
		<property name="messageListener" ref="auditTargetMessageTransformationSequence" />
		<property name="messageQueue" ref="auditSourceMessageQueue2" />
	</bean>

	<!-- =================================================================== -->
	<!--  Sequences of Listeners: first transform then send to audit queue.  -->
	<!-- =================================================================== -->
	<bean id="auditTargetMessageTransformationSequence"
		class="com.icw.ehf.messaging.support.Sequence">
		<property name="elements">
			<list>
				<ref bean="messageTransformer" />
				<ref bean="sourceToTargetAuditQueueConnector" />
			</list>
		</property>
	</bean>

	<!-- ================================================================ -->
	<!-- MessageListener that reads Events from the message body and      -->
	<!-- transforms them to AuditEntries with transformationBeanFactory   -->
	<!-- (see further below).                                             -->
	<!-- ================================================================ -->
	<bean id="messageTransformer"
		class="com.icw.ehf.integration.transform.audit.BeanFactoryAdapter">
		<property name="beanFactory" ref="transformationBeanFactory" />
	</bean>

	<!-- ================================================================ -->
	<!--  MessageListener that forwards to the auditTargetMessageQueue    -->
	<!--  after the transformation to audit Entries has been performed.   -->
	<!-- ================================================================ -->
	<bean id="sourceToTargetAuditQueueConnector"
		class="com.icw.ehf.messaging.support.Connector">
		<property name="copyMessage" value="false" />
		<property name="messageSender" ref="auditMessageSender" />
	</bean>

	<!-- used to send the messages to the auditTargetMessageQueue. -->
	<bean id="auditMessageSender" class="com.icw.ehf.messaging.mem.MessageSenderImpl">
		<property name="messageQueue" ref="auditTargetMessageQueue" />
	</bean>

	<!-- ================================================================ -->
	<!-- This queue audits each message that is put into it and whose     -->
	<!-- body contains an AuditEntry.                                     -->
	<!-- ================================================================ -->
	<bean id="auditTargetMessageQueue" class="com.icw.ehf.messaging.mem.MessageQueueImpl" />

	<!-- ================================================================ -->
	<!--  Audit Entry Logging										  																			  -->
	<!-- ================================================================ -->

	<!-- ================================================================ -->
	<!--  Container that fetches messages from the auditTargetMessageQueue-->
	<!--  and notifies the listener that sends them to the audit logger   -->
	<!-- ================================================================ -->
	<bean id="auditMessageListenerContainer"
		class="com.icw.ehf.messaging.mem.MessageListenerContainer" init-method="init"
		destroy-method="destroy">
		<property name="workerCount" value="3" />
		<property name="messageListener" ref="auditMessageListener" />
		<property name="messageQueue" ref="auditTargetMessageQueue" />
	</bean>

    <!-- ====================================================================== -->
	<!-- Listener logging to the console as opposed to logging to the database. -->
	<!-- Uncomment this definition and remove/comment the following one, then   -->
	<!-- in your logging configuration set the category                         -->
	<!-- "com.icw.ehf.audit.logging.AuditCommonsLogger" to "INFO".              -->
    <!-- ====================================================================== -->
    <!--
    <bean id="auditMessageListener"
        class="com.icw.ehf.audit.messaging.AuditMessageListener">
        <property name="logger">
            <bean class="com.icw.ehf.audit.logging.AuditCommonsLogger" />
        </property>
    </bean>
    -->
    
    <!-- Listener that logs via the auditLogger that is exported by the audit module. -->
    <bean id="auditMessageListener"
        class="com.icw.ehf.audit.messaging.BulkProcessingAuditMessageListener"
        init-method="init" destroy-method="destroy">
        <property name="logger" ref="auditLogger" />
    </bean>

	<!-- ================================================================ -->
	<!--  Transformation Machinery                                        -->
	<!-- ================================================================ -->

	<alias name="compositeTransformationBeanFactory" alias="transformationBeanFactory"/>

	<bean name="compositeTransformationBeanFactory" 
		class="com.icw.ehf.transform.factory.CompositeBeanFactory">
		<property name="beanFactories">
			<list>
				<ref bean="auditEntryTransformationBeanFactory"/>
				<ref bean="auditEntryDtoTransformationBeanFactory"/>
			</list>
		</property>
	</bean>


	<!-- Transformation BeanFactory that creates objects of type AuditEntry from
		objects of type Event. Uses a separate binder for each supported event type.  -->
	<bean id="auditEntryTransformationBeanFactory"
		class="com.icw.ehf.transform.factory.DefaultBeanFactory">
		<constructor-arg value="com.icw.ehf.audit.domain.AuditEntry" />
		<property name="transformers">
			<ref bean="auditEntryTransformers"/>
		</property>
	</bean>
	
	<bean id="auditEntryDtoTransformationBeanFactory"
		class="com.icw.ehf.transform.factory.DefaultBeanFactory">
		<constructor-arg value="com.icw.ehf.audit.transfer.AuditEntryDto" />
		<property name="transformers">
			<map>
				<entry key="com.icw.ehf.commons.event.ApplicationLifecycleEvent">
            		<bean class="com.icw.ehf.integration.transform.audit.ApplicationLifecycleEventTransformer" />    		
    			</entry>
    		</map>
		</property>
	</bean>


    <util:map id="auditEntryTransformers">
    	<entry key="com.icw.ehf.record.medical.event.LoadObservationViewEvent">
            <bean class="com.icw.ehf.integration.transform.audit.LoadObservationViewEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.authorization.event.AuthorizationEvent">
            <bean class="com.icw.ehf.integration.transform.audit.AuthorizationEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.usermgnt.event.PasswordAuthenticationEvent">
            <bean class="com.icw.ehf.integration.transform.audit.PasswordAuthEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.usermgnt.event.SecretAuthenticationEvent">
            <bean class="com.icw.ehf.integration.transform.audit.SecretAuthEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.usermgnt.event.IdentifierAuthenticationEvent">
            <bean class="com.icw.ehf.integration.transform.audit.IdentifierAuthEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.usermgnt.event.UsermgntEntityEvent">
            <bean class="com.icw.ehf.integration.transform.audit.UsermgntEntityEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.commons.event.DomainObjectEvent">
            <bean class="com.icw.ehf.integration.transform.audit.DomainObjectEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.document.service.DocumentEvent">
            <bean class="com.icw.ehf.integration.transform.audit.DocumentEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.usermgnt.event.CertificateAuthenticationEvent">
            <bean class="com.icw.ehf.integration.transform.audit.CertificateAuthEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.commons.audit.event.RollbackEvent">
            <bean class="com.icw.ehf.integration.transform.audit.RollbackEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.commons.audit.event.InvokeEvent">
            <bean class="com.icw.ehf.integration.transform.audit.InvokeEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.authentication.event.LogoutEvent">
            <bean class="com.icw.ehf.integration.transform.audit.LogoutEventTransformer" />    		
    	</entry>
    	<entry key="com.icw.ehf.commons.security.web.csrf.event.NonceValidationFailure">
            <bean class="com.icw.ehf.integration.transform.audit.NonceValidationFailureTransformer" />    		
    	</entry>
    </util:map>
    

	<alias alias="platformMessageQueue2" name="auditSourceMessageQueue2" />

</beans>
